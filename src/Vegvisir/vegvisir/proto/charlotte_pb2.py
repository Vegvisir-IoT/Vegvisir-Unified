# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: charlotte.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import common_pb2 as common__pb2
from . import hetcons_pb2 as hetcons__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='charlotte.proto',
  package='charlotte',
  syntax='proto3',
  serialized_pb=_b('\n\x0f\x63harlotte.proto\x12\tcharlotte\x1a\x0c\x63ommon.proto\x1a\rhetcons.proto\"\xe3\x03\n\x12SignedGitSimCommit\x12:\n\x06\x63ommit\x18\x01 \x01(\x0b\x32*.charlotte.SignedGitSimCommit.GitSimCommit\x12\'\n\tsignature\x18\x02 \x01(\x0b\x32\x14.charlotte.Signature\x1a\xe7\x02\n\x0cGitSimCommit\x12\x0f\n\x07\x63omment\x18\x01 \x01(\t\x12\x1d\n\x04hash\x18\x02 \x01(\x0b\x32\x0f.charlotte.Hash\x12\x17\n\rinitialCommit\x18\x03 \x01(\x0cH\x00\x12K\n\x07parents\x18\x04 \x01(\x0b\x32\x38.charlotte.SignedGitSimCommit.GitSimCommit.GitSimParentsH\x00\x1a\xb0\x01\n\rGitSimParents\x12U\n\x06parent\x18\x01 \x03(\x0b\x32\x45.charlotte.SignedGitSimCommit.GitSimCommit.GitSimParents.GitSimParent\x1aH\n\x0cGitSimParent\x12*\n\x0cparentCommit\x18\x01 \x01(\x0b\x32\x14.charlotte.Reference\x12\x0c\n\x04\x64iff\x18\x02 \x01(\x0c\x42\x0e\n\x0c\x63ommit_oneof\"\xb0\x02\n\x05\x42lock\x12\x45\n\x17\x61vailabilityAttestation\x18\x01 \x01(\x0b\x32\".charlotte.AvailabilityAttestationH\x00\x12?\n\x14integrityAttestation\x18\x02 \x01(\x0b\x32\x1f.charlotte.IntegrityAttestationH\x00\x12\r\n\x03str\x18\x03 \x01(\tH\x00\x12/\n\x0chetconsBlock\x18\x04 \x01(\x0b\x32\x17.charlotte.HetconsBlockH\x00\x12;\n\x12signedGitSimCommit\x18\x05 \x01(\x0b\x32\x1d.charlotte.SignedGitSimCommitH\x00\x12\x0f\n\x05\x62lock\x18\x06 \x01(\x0cH\x00\x42\x11\n\x0f\x62locktype_oneof\"2\n\x0fSendBlocksInput\x12\x1f\n\x05\x62lock\x18\x01 \x01(\x0b\x32\x10.charlotte.Block\"*\n\x12SendBlocksResponse\x12\x14\n\x0c\x65rrorMessage\x18\x01 \x01(\t\"r\n\x12\x41vailabilityPolicy\x12<\n\x0e\x66illInTheBlank\x18\x01 \x01(\x0b\x32\".charlotte.AvailabilityAttestationH\x00\x42\x1e\n\x1c\x61vailabilitypolicytype_oneof\"T\n#RequestAvailabilityAttestationInput\x12-\n\x06policy\x18\x01 \x01(\x0b\x32\x1d.charlotte.AvailabilityPolicy\"g\n&RequestAvailabilityAttestationResponse\x12\x14\n\x0c\x65rrorMessage\x18\x01 \x01(\t\x12\'\n\treference\x18\x02 \x01(\x0b\x32\x14.charlotte.Reference\"~\n\x10WilburQueryInput\x12)\n\treference\x18\x01 \x01(\x0b\x32\x14.charlotte.ReferenceH\x00\x12*\n\x0e\x66illInTheBlank\x18\x02 \x01(\x0b\x32\x10.charlotte.BlockH\x00\x42\x13\n\x11wilburquery_oneof\"L\n\x13WilburQueryResponse\x12\x14\n\x0c\x65rrorMessage\x18\x01 \x01(\t\x12\x1f\n\x05\x62lock\x18\x02 \x03(\x0b\x32\x10.charlotte.Block\"\x91\x02\n\x0fIntegrityPolicy\x12\x39\n\x0e\x66illInTheBlank\x18\x01 \x01(\x0b\x32\x1f.charlotte.IntegrityAttestationH\x00\x12\x41\n\rhetconsPolicy\x18\x02 \x01(\x0b\x32(.charlotte.IntegrityPolicy.HetconsPolicyH\x00\x1a\x63\n\rHetconsPolicy\x12+\n\x08proposal\x18\x01 \x01(\x0b\x32\x19.charlotte.HetconsMessage\x12%\n\x08observer\x18\x02 \x01(\x0b\x32\x13.charlotte.CryptoIdB\x1b\n\x19integritypolicytype_oneof\"N\n RequestIntegrityAttestationInput\x12*\n\x06policy\x18\x01 \x01(\x0b\x32\x1a.charlotte.IntegrityPolicy\"d\n#RequestIntegrityAttestationResponse\x12\x14\n\x0c\x65rrorMessage\x18\x01 \x01(\t\x12\'\n\treference\x18\x02 \x01(\x0b\x32\x14.charlotte.Reference2^\n\rCharlotteNode\x12M\n\nSendBlocks\x12\x1a.charlotte.SendBlocksInput\x1a\x1d.charlotte.SendBlocksResponse\"\x00(\x01\x30\x01\x32\x90\x01\n\x06Wilbur\x12\x85\x01\n\x1eRequestAvailabilityAttestation\x12..charlotte.RequestAvailabilityAttestationInput\x1a\x31.charlotte.RequestAvailabilityAttestationResponse\"\x00\x32[\n\x0bWilburQuery\x12L\n\x0bWilburQuery\x12\x1b.charlotte.WilburQueryInput\x1a\x1e.charlotte.WilburQueryResponse\"\x00\x32\x84\x01\n\x04\x46\x65rn\x12|\n\x1bRequestIntegrityAttestation\x12+.charlotte.RequestIntegrityAttestationInput\x1a..charlotte.RequestIntegrityAttestationResponse\"\x00\x42>\n\x1e\x63om.isaacsheff.charlotte.protoB\x0e\x43harlotteProtoP\x01\xa2\x02\tCHARLOTTEb\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,hetcons__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS_GITSIMPARENT = _descriptor.Descriptor(
  name='GitSimParent',
  full_name='charlotte.SignedGitSimCommit.GitSimCommit.GitSimParents.GitSimParent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parentCommit', full_name='charlotte.SignedGitSimCommit.GitSimCommit.GitSimParents.GitSimParent.parentCommit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='diff', full_name='charlotte.SignedGitSimCommit.GitSimCommit.GitSimParents.GitSimParent.diff', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=455,
  serialized_end=527,
)

_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS = _descriptor.Descriptor(
  name='GitSimParents',
  full_name='charlotte.SignedGitSimCommit.GitSimCommit.GitSimParents',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent', full_name='charlotte.SignedGitSimCommit.GitSimCommit.GitSimParents.parent', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS_GITSIMPARENT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=351,
  serialized_end=527,
)

_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT = _descriptor.Descriptor(
  name='GitSimCommit',
  full_name='charlotte.SignedGitSimCommit.GitSimCommit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='comment', full_name='charlotte.SignedGitSimCommit.GitSimCommit.comment', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hash', full_name='charlotte.SignedGitSimCommit.GitSimCommit.hash', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='initialCommit', full_name='charlotte.SignedGitSimCommit.GitSimCommit.initialCommit', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parents', full_name='charlotte.SignedGitSimCommit.GitSimCommit.parents', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='commit_oneof', full_name='charlotte.SignedGitSimCommit.GitSimCommit.commit_oneof',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=184,
  serialized_end=543,
)

_SIGNEDGITSIMCOMMIT = _descriptor.Descriptor(
  name='SignedGitSimCommit',
  full_name='charlotte.SignedGitSimCommit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='charlotte.SignedGitSimCommit.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='signature', full_name='charlotte.SignedGitSimCommit.signature', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=60,
  serialized_end=543,
)


_BLOCK = _descriptor.Descriptor(
  name='Block',
  full_name='charlotte.Block',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='availabilityAttestation', full_name='charlotte.Block.availabilityAttestation', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='integrityAttestation', full_name='charlotte.Block.integrityAttestation', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='str', full_name='charlotte.Block.str', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hetconsBlock', full_name='charlotte.Block.hetconsBlock', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='signedGitSimCommit', full_name='charlotte.Block.signedGitSimCommit', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='block', full_name='charlotte.Block.block', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='blocktype_oneof', full_name='charlotte.Block.blocktype_oneof',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=546,
  serialized_end=850,
)


_SENDBLOCKSINPUT = _descriptor.Descriptor(
  name='SendBlocksInput',
  full_name='charlotte.SendBlocksInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block', full_name='charlotte.SendBlocksInput.block', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=852,
  serialized_end=902,
)


_SENDBLOCKSRESPONSE = _descriptor.Descriptor(
  name='SendBlocksResponse',
  full_name='charlotte.SendBlocksResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='errorMessage', full_name='charlotte.SendBlocksResponse.errorMessage', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=904,
  serialized_end=946,
)


_AVAILABILITYPOLICY = _descriptor.Descriptor(
  name='AvailabilityPolicy',
  full_name='charlotte.AvailabilityPolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fillInTheBlank', full_name='charlotte.AvailabilityPolicy.fillInTheBlank', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='availabilitypolicytype_oneof', full_name='charlotte.AvailabilityPolicy.availabilitypolicytype_oneof',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=948,
  serialized_end=1062,
)


_REQUESTAVAILABILITYATTESTATIONINPUT = _descriptor.Descriptor(
  name='RequestAvailabilityAttestationInput',
  full_name='charlotte.RequestAvailabilityAttestationInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='policy', full_name='charlotte.RequestAvailabilityAttestationInput.policy', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1064,
  serialized_end=1148,
)


_REQUESTAVAILABILITYATTESTATIONRESPONSE = _descriptor.Descriptor(
  name='RequestAvailabilityAttestationResponse',
  full_name='charlotte.RequestAvailabilityAttestationResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='errorMessage', full_name='charlotte.RequestAvailabilityAttestationResponse.errorMessage', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reference', full_name='charlotte.RequestAvailabilityAttestationResponse.reference', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1150,
  serialized_end=1253,
)


_WILBURQUERYINPUT = _descriptor.Descriptor(
  name='WilburQueryInput',
  full_name='charlotte.WilburQueryInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reference', full_name='charlotte.WilburQueryInput.reference', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fillInTheBlank', full_name='charlotte.WilburQueryInput.fillInTheBlank', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='wilburquery_oneof', full_name='charlotte.WilburQueryInput.wilburquery_oneof',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1255,
  serialized_end=1381,
)


_WILBURQUERYRESPONSE = _descriptor.Descriptor(
  name='WilburQueryResponse',
  full_name='charlotte.WilburQueryResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='errorMessage', full_name='charlotte.WilburQueryResponse.errorMessage', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='block', full_name='charlotte.WilburQueryResponse.block', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1383,
  serialized_end=1459,
)


_INTEGRITYPOLICY_HETCONSPOLICY = _descriptor.Descriptor(
  name='HetconsPolicy',
  full_name='charlotte.IntegrityPolicy.HetconsPolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='proposal', full_name='charlotte.IntegrityPolicy.HetconsPolicy.proposal', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='observer', full_name='charlotte.IntegrityPolicy.HetconsPolicy.observer', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1607,
  serialized_end=1706,
)

_INTEGRITYPOLICY = _descriptor.Descriptor(
  name='IntegrityPolicy',
  full_name='charlotte.IntegrityPolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fillInTheBlank', full_name='charlotte.IntegrityPolicy.fillInTheBlank', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hetconsPolicy', full_name='charlotte.IntegrityPolicy.hetconsPolicy', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_INTEGRITYPOLICY_HETCONSPOLICY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='integritypolicytype_oneof', full_name='charlotte.IntegrityPolicy.integritypolicytype_oneof',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1462,
  serialized_end=1735,
)


_REQUESTINTEGRITYATTESTATIONINPUT = _descriptor.Descriptor(
  name='RequestIntegrityAttestationInput',
  full_name='charlotte.RequestIntegrityAttestationInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='policy', full_name='charlotte.RequestIntegrityAttestationInput.policy', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1737,
  serialized_end=1815,
)


_REQUESTINTEGRITYATTESTATIONRESPONSE = _descriptor.Descriptor(
  name='RequestIntegrityAttestationResponse',
  full_name='charlotte.RequestIntegrityAttestationResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='errorMessage', full_name='charlotte.RequestIntegrityAttestationResponse.errorMessage', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reference', full_name='charlotte.RequestIntegrityAttestationResponse.reference', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1817,
  serialized_end=1917,
)

_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS_GITSIMPARENT.fields_by_name['parentCommit'].message_type = common__pb2._REFERENCE
_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS_GITSIMPARENT.containing_type = _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS
_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS.fields_by_name['parent'].message_type = _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS_GITSIMPARENT
_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS.containing_type = _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT
_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT.fields_by_name['hash'].message_type = common__pb2._HASH
_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT.fields_by_name['parents'].message_type = _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS
_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT.containing_type = _SIGNEDGITSIMCOMMIT
_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT.oneofs_by_name['commit_oneof'].fields.append(
  _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT.fields_by_name['initialCommit'])
_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT.fields_by_name['initialCommit'].containing_oneof = _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT.oneofs_by_name['commit_oneof']
_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT.oneofs_by_name['commit_oneof'].fields.append(
  _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT.fields_by_name['parents'])
_SIGNEDGITSIMCOMMIT_GITSIMCOMMIT.fields_by_name['parents'].containing_oneof = _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT.oneofs_by_name['commit_oneof']
_SIGNEDGITSIMCOMMIT.fields_by_name['commit'].message_type = _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT
_SIGNEDGITSIMCOMMIT.fields_by_name['signature'].message_type = common__pb2._SIGNATURE
_BLOCK.fields_by_name['availabilityAttestation'].message_type = common__pb2._AVAILABILITYATTESTATION
_BLOCK.fields_by_name['integrityAttestation'].message_type = common__pb2._INTEGRITYATTESTATION
_BLOCK.fields_by_name['hetconsBlock'].message_type = hetcons__pb2._HETCONSBLOCK
_BLOCK.fields_by_name['signedGitSimCommit'].message_type = _SIGNEDGITSIMCOMMIT
_BLOCK.oneofs_by_name['blocktype_oneof'].fields.append(
  _BLOCK.fields_by_name['availabilityAttestation'])
_BLOCK.fields_by_name['availabilityAttestation'].containing_oneof = _BLOCK.oneofs_by_name['blocktype_oneof']
_BLOCK.oneofs_by_name['blocktype_oneof'].fields.append(
  _BLOCK.fields_by_name['integrityAttestation'])
_BLOCK.fields_by_name['integrityAttestation'].containing_oneof = _BLOCK.oneofs_by_name['blocktype_oneof']
_BLOCK.oneofs_by_name['blocktype_oneof'].fields.append(
  _BLOCK.fields_by_name['str'])
_BLOCK.fields_by_name['str'].containing_oneof = _BLOCK.oneofs_by_name['blocktype_oneof']
_BLOCK.oneofs_by_name['blocktype_oneof'].fields.append(
  _BLOCK.fields_by_name['hetconsBlock'])
_BLOCK.fields_by_name['hetconsBlock'].containing_oneof = _BLOCK.oneofs_by_name['blocktype_oneof']
_BLOCK.oneofs_by_name['blocktype_oneof'].fields.append(
  _BLOCK.fields_by_name['signedGitSimCommit'])
_BLOCK.fields_by_name['signedGitSimCommit'].containing_oneof = _BLOCK.oneofs_by_name['blocktype_oneof']
_BLOCK.oneofs_by_name['blocktype_oneof'].fields.append(
  _BLOCK.fields_by_name['block'])
_BLOCK.fields_by_name['block'].containing_oneof = _BLOCK.oneofs_by_name['blocktype_oneof']
_SENDBLOCKSINPUT.fields_by_name['block'].message_type = _BLOCK
_AVAILABILITYPOLICY.fields_by_name['fillInTheBlank'].message_type = common__pb2._AVAILABILITYATTESTATION
_AVAILABILITYPOLICY.oneofs_by_name['availabilitypolicytype_oneof'].fields.append(
  _AVAILABILITYPOLICY.fields_by_name['fillInTheBlank'])
_AVAILABILITYPOLICY.fields_by_name['fillInTheBlank'].containing_oneof = _AVAILABILITYPOLICY.oneofs_by_name['availabilitypolicytype_oneof']
_REQUESTAVAILABILITYATTESTATIONINPUT.fields_by_name['policy'].message_type = _AVAILABILITYPOLICY
_REQUESTAVAILABILITYATTESTATIONRESPONSE.fields_by_name['reference'].message_type = common__pb2._REFERENCE
_WILBURQUERYINPUT.fields_by_name['reference'].message_type = common__pb2._REFERENCE
_WILBURQUERYINPUT.fields_by_name['fillInTheBlank'].message_type = _BLOCK
_WILBURQUERYINPUT.oneofs_by_name['wilburquery_oneof'].fields.append(
  _WILBURQUERYINPUT.fields_by_name['reference'])
_WILBURQUERYINPUT.fields_by_name['reference'].containing_oneof = _WILBURQUERYINPUT.oneofs_by_name['wilburquery_oneof']
_WILBURQUERYINPUT.oneofs_by_name['wilburquery_oneof'].fields.append(
  _WILBURQUERYINPUT.fields_by_name['fillInTheBlank'])
_WILBURQUERYINPUT.fields_by_name['fillInTheBlank'].containing_oneof = _WILBURQUERYINPUT.oneofs_by_name['wilburquery_oneof']
_WILBURQUERYRESPONSE.fields_by_name['block'].message_type = _BLOCK
_INTEGRITYPOLICY_HETCONSPOLICY.fields_by_name['proposal'].message_type = hetcons__pb2._HETCONSMESSAGE
_INTEGRITYPOLICY_HETCONSPOLICY.fields_by_name['observer'].message_type = common__pb2._CRYPTOID
_INTEGRITYPOLICY_HETCONSPOLICY.containing_type = _INTEGRITYPOLICY
_INTEGRITYPOLICY.fields_by_name['fillInTheBlank'].message_type = common__pb2._INTEGRITYATTESTATION
_INTEGRITYPOLICY.fields_by_name['hetconsPolicy'].message_type = _INTEGRITYPOLICY_HETCONSPOLICY
_INTEGRITYPOLICY.oneofs_by_name['integritypolicytype_oneof'].fields.append(
  _INTEGRITYPOLICY.fields_by_name['fillInTheBlank'])
_INTEGRITYPOLICY.fields_by_name['fillInTheBlank'].containing_oneof = _INTEGRITYPOLICY.oneofs_by_name['integritypolicytype_oneof']
_INTEGRITYPOLICY.oneofs_by_name['integritypolicytype_oneof'].fields.append(
  _INTEGRITYPOLICY.fields_by_name['hetconsPolicy'])
_INTEGRITYPOLICY.fields_by_name['hetconsPolicy'].containing_oneof = _INTEGRITYPOLICY.oneofs_by_name['integritypolicytype_oneof']
_REQUESTINTEGRITYATTESTATIONINPUT.fields_by_name['policy'].message_type = _INTEGRITYPOLICY
_REQUESTINTEGRITYATTESTATIONRESPONSE.fields_by_name['reference'].message_type = common__pb2._REFERENCE
DESCRIPTOR.message_types_by_name['SignedGitSimCommit'] = _SIGNEDGITSIMCOMMIT
DESCRIPTOR.message_types_by_name['Block'] = _BLOCK
DESCRIPTOR.message_types_by_name['SendBlocksInput'] = _SENDBLOCKSINPUT
DESCRIPTOR.message_types_by_name['SendBlocksResponse'] = _SENDBLOCKSRESPONSE
DESCRIPTOR.message_types_by_name['AvailabilityPolicy'] = _AVAILABILITYPOLICY
DESCRIPTOR.message_types_by_name['RequestAvailabilityAttestationInput'] = _REQUESTAVAILABILITYATTESTATIONINPUT
DESCRIPTOR.message_types_by_name['RequestAvailabilityAttestationResponse'] = _REQUESTAVAILABILITYATTESTATIONRESPONSE
DESCRIPTOR.message_types_by_name['WilburQueryInput'] = _WILBURQUERYINPUT
DESCRIPTOR.message_types_by_name['WilburQueryResponse'] = _WILBURQUERYRESPONSE
DESCRIPTOR.message_types_by_name['IntegrityPolicy'] = _INTEGRITYPOLICY
DESCRIPTOR.message_types_by_name['RequestIntegrityAttestationInput'] = _REQUESTINTEGRITYATTESTATIONINPUT
DESCRIPTOR.message_types_by_name['RequestIntegrityAttestationResponse'] = _REQUESTINTEGRITYATTESTATIONRESPONSE

SignedGitSimCommit = _reflection.GeneratedProtocolMessageType('SignedGitSimCommit', (_message.Message,), dict(

  GitSimCommit = _reflection.GeneratedProtocolMessageType('GitSimCommit', (_message.Message,), dict(

    GitSimParents = _reflection.GeneratedProtocolMessageType('GitSimParents', (_message.Message,), dict(

      GitSimParent = _reflection.GeneratedProtocolMessageType('GitSimParent', (_message.Message,), dict(
        DESCRIPTOR = _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS_GITSIMPARENT,
        __module__ = 'charlotte_pb2'
        # @@protoc_insertion_point(class_scope:charlotte.SignedGitSimCommit.GitSimCommit.GitSimParents.GitSimParent)
        ))
      ,
      DESCRIPTOR = _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT_GITSIMPARENTS,
      __module__ = 'charlotte_pb2'
      # @@protoc_insertion_point(class_scope:charlotte.SignedGitSimCommit.GitSimCommit.GitSimParents)
      ))
    ,
    DESCRIPTOR = _SIGNEDGITSIMCOMMIT_GITSIMCOMMIT,
    __module__ = 'charlotte_pb2'
    # @@protoc_insertion_point(class_scope:charlotte.SignedGitSimCommit.GitSimCommit)
    ))
  ,
  DESCRIPTOR = _SIGNEDGITSIMCOMMIT,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.SignedGitSimCommit)
  ))
_sym_db.RegisterMessage(SignedGitSimCommit)
_sym_db.RegisterMessage(SignedGitSimCommit.GitSimCommit)
_sym_db.RegisterMessage(SignedGitSimCommit.GitSimCommit.GitSimParents)
_sym_db.RegisterMessage(SignedGitSimCommit.GitSimCommit.GitSimParents.GitSimParent)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), dict(
  DESCRIPTOR = _BLOCK,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.Block)
  ))
_sym_db.RegisterMessage(Block)

SendBlocksInput = _reflection.GeneratedProtocolMessageType('SendBlocksInput', (_message.Message,), dict(
  DESCRIPTOR = _SENDBLOCKSINPUT,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.SendBlocksInput)
  ))
_sym_db.RegisterMessage(SendBlocksInput)

SendBlocksResponse = _reflection.GeneratedProtocolMessageType('SendBlocksResponse', (_message.Message,), dict(
  DESCRIPTOR = _SENDBLOCKSRESPONSE,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.SendBlocksResponse)
  ))
_sym_db.RegisterMessage(SendBlocksResponse)

AvailabilityPolicy = _reflection.GeneratedProtocolMessageType('AvailabilityPolicy', (_message.Message,), dict(
  DESCRIPTOR = _AVAILABILITYPOLICY,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.AvailabilityPolicy)
  ))
_sym_db.RegisterMessage(AvailabilityPolicy)

RequestAvailabilityAttestationInput = _reflection.GeneratedProtocolMessageType('RequestAvailabilityAttestationInput', (_message.Message,), dict(
  DESCRIPTOR = _REQUESTAVAILABILITYATTESTATIONINPUT,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.RequestAvailabilityAttestationInput)
  ))
_sym_db.RegisterMessage(RequestAvailabilityAttestationInput)

RequestAvailabilityAttestationResponse = _reflection.GeneratedProtocolMessageType('RequestAvailabilityAttestationResponse', (_message.Message,), dict(
  DESCRIPTOR = _REQUESTAVAILABILITYATTESTATIONRESPONSE,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.RequestAvailabilityAttestationResponse)
  ))
_sym_db.RegisterMessage(RequestAvailabilityAttestationResponse)

WilburQueryInput = _reflection.GeneratedProtocolMessageType('WilburQueryInput', (_message.Message,), dict(
  DESCRIPTOR = _WILBURQUERYINPUT,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.WilburQueryInput)
  ))
_sym_db.RegisterMessage(WilburQueryInput)

WilburQueryResponse = _reflection.GeneratedProtocolMessageType('WilburQueryResponse', (_message.Message,), dict(
  DESCRIPTOR = _WILBURQUERYRESPONSE,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.WilburQueryResponse)
  ))
_sym_db.RegisterMessage(WilburQueryResponse)

IntegrityPolicy = _reflection.GeneratedProtocolMessageType('IntegrityPolicy', (_message.Message,), dict(

  HetconsPolicy = _reflection.GeneratedProtocolMessageType('HetconsPolicy', (_message.Message,), dict(
    DESCRIPTOR = _INTEGRITYPOLICY_HETCONSPOLICY,
    __module__ = 'charlotte_pb2'
    # @@protoc_insertion_point(class_scope:charlotte.IntegrityPolicy.HetconsPolicy)
    ))
  ,
  DESCRIPTOR = _INTEGRITYPOLICY,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.IntegrityPolicy)
  ))
_sym_db.RegisterMessage(IntegrityPolicy)
_sym_db.RegisterMessage(IntegrityPolicy.HetconsPolicy)

RequestIntegrityAttestationInput = _reflection.GeneratedProtocolMessageType('RequestIntegrityAttestationInput', (_message.Message,), dict(
  DESCRIPTOR = _REQUESTINTEGRITYATTESTATIONINPUT,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.RequestIntegrityAttestationInput)
  ))
_sym_db.RegisterMessage(RequestIntegrityAttestationInput)

RequestIntegrityAttestationResponse = _reflection.GeneratedProtocolMessageType('RequestIntegrityAttestationResponse', (_message.Message,), dict(
  DESCRIPTOR = _REQUESTINTEGRITYATTESTATIONRESPONSE,
  __module__ = 'charlotte_pb2'
  # @@protoc_insertion_point(class_scope:charlotte.RequestIntegrityAttestationResponse)
  ))
_sym_db.RegisterMessage(RequestIntegrityAttestationResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\036com.isaacsheff.charlotte.protoB\016CharlotteProtoP\001\242\002\tCHARLOTTE'))
# @@protoc_insertion_point(module_scope)
